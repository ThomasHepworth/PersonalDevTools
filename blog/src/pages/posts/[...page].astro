---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import getUniqueTags from "@/utils/getUniqueTags";
import { SITE } from "@/config";

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  return paginate(getSortedPosts(posts), { pageSize: SITE.postPerPage });
}) satisfies GetStaticPaths;

const allPosts = await getCollection("blog");
const tags = getUniqueTags(allPosts);

const { page } = Astro.props;
---

<Layout title={`Posts | ${SITE.title}`}>
  <Header />
  <Main pageTitle="Posts" pageDesc="All the articles I've posted.">
    <label for="tagFilter">Filter by tag:</label>
    <select id="tagFilter" name="tagFilter">
      <option value="">All</option>
      {tags.map(t =>
        <option value={t.tag}>{t.tagName}</option>
      )}
    </select>
    <ul>
      {page.data.map(data => <Card {...data} />)}
    </ul>
  </Main>

  <Pagination {page} />

  <Footer noMarginTop={page.lastPage > 1} />

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      document.querySelector("#tagFilter")?.addEventListener("change", (event: Event) => {
        const val = (event.target as HTMLSelectElement).value;
        if (val) location.href = `/tags/${val}`;
      });
    });
  </script>
</Layout>
